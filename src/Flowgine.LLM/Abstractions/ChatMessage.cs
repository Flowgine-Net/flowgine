namespace Flowgine.LLM.Abstractions;

/// <summary>
/// Specifies the role of a participant in a chat conversation.
/// </summary>
public enum ChatRole
{
    /// <summary>
    /// System-level instructions that guide the model's behavior.
    /// </summary>
    System,
    
    /// <summary>
    /// Messages from the end user.
    /// </summary>
    User,
    
    /// <summary>
    /// Messages generated by the AI assistant.
    /// </summary>
    Assistant,
    
    /// <summary>
    /// Messages containing results from tool/function calls.
    /// </summary>
    Tool
}

/// <summary>
/// Base class for content that can appear in a chat message.
/// </summary>
public abstract record ChatContent;

/// <summary>
/// Represents text content in a chat message.
/// </summary>
/// <param name="Text">The text content.</param>
public sealed record TextContent(string Text) : ChatContent;

/// <summary>
/// Represents a single message in a chat conversation.
/// A message can contain multiple content parts in a specific order.
/// </summary>
/// <param name="Role">The role of the message sender.</param>
/// <param name="Parts">The content parts of the message.</param>
public sealed record ChatMessage(ChatRole Role, IReadOnlyList<ChatContent> Parts)
{
    /// <summary>
    /// Creates a system message with the specified text.
    /// </summary>
    /// <param name="t">The system message text.</param>
    /// <returns>A new system message.</returns>
    public static ChatMessage System(string t)   => new(ChatRole.System, [new TextContent(t)]);
    
    /// <summary>
    /// Creates a user message with the specified text.
    /// </summary>
    /// <param name="t">The user message text.</param>
    /// <returns>A new user message.</returns>
    public static ChatMessage User(string t)     => new(ChatRole.User, [new TextContent(t)]);
    
    /// <summary>
    /// Creates an assistant message with the specified text.
    /// </summary>
    /// <param name="t">The assistant message text.</param>
    /// <returns>A new assistant message.</returns>
    public static ChatMessage Assistant(string t)=> new(ChatRole.Assistant, [new TextContent(t)]);
}

